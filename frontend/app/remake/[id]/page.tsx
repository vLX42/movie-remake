import { getMovie } from "@/lib/getMovie";
import { Suspense } from "react";
import { OriginalMovie } from "../../components/original";
import { Metadata } from "next";

export const dynamic = "force-dynamic"; // ðŸ”¥ Key fix!

export async function generateMetadata({
  params,
}: {
  params: { id: string };
}): Promise<Metadata> {
  console.log("[generateMetadata] called with params:", params);

  try {
    const movieData = await getMovie(params.id);
    console.log("[generateMetadata] got movieData:", movieData?.original_title);

    if (movieData?.remake) {
      return {
        title: `${movieData.original_title} AI generated remake`,
        description: `Remake of the classic movie ${movieData.original_title} generated by ChatGPT - Hollywood Movie Remake Generator\n${movieData.remake.description}`,
        openGraph: {
          images: movieData.remake.imageURL
            ? [
                {
                  url: movieData.remake.imageURL,
                  width: 512,
                  height: 412,
                },
              ]
            : [],
          locale: "en-US",
          type: "website",
        },
      };
    }
  } catch (err) {
    console.error("generateMetadata error:", err);
  }

  return {
    title: "Movie Remake",
    description: "AI-generated movie remake.",
  };
}

export default async function Page({
  params,
}: {
  params: { id: string };
}) {
  const movieData = await getMovie(params.id);
  return (
    <Suspense fallback={<></>}>
      {/* @ts-expect-error Async Server Component */}
      <OriginalMovie promise={movieData} />
    </Suspense>
  );
}
