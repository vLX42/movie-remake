import { getMovie } from "@/lib/getMovie";
import { OriginalMovie } from "../../components/original";
import { Metadata } from "next";

export const dynamic = "force-dynamic";

interface PageProps {
  params: { id: string };
}

export async function generateMetadata({ params }: PageProps): Promise<Metadata> {
  try {
    const movieData = await getMovie(params.id);
    if (movieData?.remake) {
      return {
        title: `${movieData.original_title} AI generated remake`,
        description: `Remake of the classic movie ${movieData.original_title} generated by ChatGPT - Hollywood Movie Remake Generator\n${movieData.remake.description}`,
        openGraph: {
          images: movieData.remake.imageURL
            ? [{ url: movieData.remake.imageURL, width: 512, height: 412 }]
            : [],
          locale: "en-US",
          type: "website",
        },
      };
    }
  } catch (err) {
    console.error("generateMetadata error:", err);
  }

  return {
    title: "Movie Remake",
    description: "AI-generated movie remake.",
  };
}

export default function Page({ params }: PageProps) {
  // âœ… Don't await here, pass promise to component
  const moviePromise = getMovie(params.id);

  return (
    <OriginalMovie promise={moviePromise} />
  );
}
